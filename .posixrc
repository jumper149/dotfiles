#!/usr/bin/env sh
# general variables, aliases and functions

# flag aliases
alias ls='ls --color=auto'
alias rm='rm --interactive=always'
alias mv='mv --interactive'

# dotfiles
alias dotgit='git --git-dir=${HOME}/.dotfiles --work-tree=${HOME}'
alias safegit='git --git-dir=${HOME}/.dotsafe --work-tree=${HOME}'

# pastebin
alias sprunge='curl -F "sprunge=<-" http://sprunge.us'
alias ixio='curl -F "f:1=<-" http://ix.io'

# change directory with ranger
cdranger() {
    local tempfile="$(mktemp -t tmp.XXXXXX)"
    ranger --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" &&
        if [ "$(cat -- "$tempfile")" != "$(echo -n "$(pwd)")" ]; then
            cd -- "$(cat "$tempfile")" || exit
        fi
        rm -f -- "$tempfile"
    }

# change directory with nnn
cdnnn () {
    # Block nesting of nnn in subshells
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi

    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # To cd on quit only on ^G, either remove the "export" as in:
    #    NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    #    (or, to a custom path: NNN_TMPFILE=/tmp/.lastd)
    # or, export NNN_TMPFILE after nnn invocation
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    nnn "$@"

    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}

# generate a random password
randompassword(){ < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c"${1:-16}";echo;}

# ssh and local ip
export IPDESK="192.168.1.199"
export IPJUMP="192.168.1.198"
export IPPI64="192.168.1.197"
export IPPI32="192.168.1.187"
export IPX201="192.168.1.196"
export IPX220="192.168.1.195"
export IPA3="192.168.1.190"

# for gpg-agent from manpage
GPG_TTY=$(tty)
export GPG_TTY
unset SSH_AGENT_PID
if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
    SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
    export SSH_AUTH_SOCK
fi
