# check out '~/.readme/LICENSE'

#----------------------------------------------------------------

# to use these dotfiles

# have a user with homedirectory or create one as root with
$ useradd -m -U $NONROOTUSER 
# enter password with
$ passwd $NONROOTUSER

# then as $NONROOTUSER

$ alias dotgit="git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
$ git clone --bare https://github.com/jumper149/dotfiles.git $HOME/.dotfiles
$ dotgit config --local status.showUntrackedFiles no
$ dotgit checkout

#----------------------------------------------------------------

# archlinux pkg dependencies for utilising the dotfiles
# are found in files:

# ~/.readme/groups
# ~/.readme/core
# ~/.readme/aur
# ~/.readme/maybe

# groups and core are necessary
# there is '~/.readme/install_core.sh' alias 'pacsync' to install groups, core and aur (might need 'pkgaur' to use)

#----------------------------------------------------------------

# services and other stuff that needs to be done by root after installing
# set $NONROOTUSER and $NONROOTHOME (no '/' at the end)

$ NONROOTUSER=jumper
$ NONROOTHOME=/home/jumper

# [haveged]
$ systemctl enable haveged.service

# [Networking]
$ ln -s /usr/share/dhcpcd/hooks/10-wpa_supplicant /usr/lib/dhcpcd/dhcpcd-hooks/
$ systemctl enable dhcpcd.service

# [ca-certs]
$ cp $NONROOTHOME/.readme/root-config/deutsche-telekom-root-ca-2.crt /usr/share/ca-certificates/trust-source/anchors/
$ trust extract-compat /usr/share/ca-certificates/trust-source/anchors/deutsche-telekom-root-ca-2.crt

# [sudo]
# allow sudo for group wheel with
$ visudo
$ gpasswd --add $NONROOTUSER wheel

# [xorg]
$ systemctl enable sddm.service

# [ufw]
$ systemctl enable ufw.service
$ ufw default deny
$ ufw limit SSH
$ ufw enable

# [sensors]
$ sensors-detect

# [backlight]
$ gpasswd --add $NONROOTUSER video

# [sshd]
$ systemctl enable sshd.socket

# [cronie]
$ systemctl enable cronie.service
$ gpasswd --add $NONROOTUSER users

# [bluetooth]
# uncomment:
# 	ln107: AutoEnable=false
$ vim /etc/bluetooth/main.conf
$ systemctl enable bluetooth.service

# [vnstat]
$ systemctl enable vnstat.service
$ systemctl start vnstat.service
# update the desired interfaces
$ vnstat -u -i wlp2s0
$ vnstat -u -i enp0s25

# [tor]
$ systemctl enable tor.service
# maybe allow gpg keys (look into PKGBUILD when compiling snapshot)

#----------------------------------------------------------------

# configuration outside of homedirectory by root

# [example in ~/.readme/root-config/]
# check these out by yourself

$ cp $NONROOTHOME/.readme/root-config/wpa_supplicant /etc/wpa_supplicant/wpa_supplicant.conf

$ cp $NONROOTHOME/.readme/root-config/sshd_config /etc/ssh/sshd_config

# for BIOS boot, change entries
$ cp $NONROOTHOME/.readme/root-config/syslinux.cfg /boot/syslinux/syslinux.cfg

$ cp $NONROOTHOME/.readme/root-config/sddm.conf /etc/sddm.conf

# maybe change KERNEL in backlight.rules
$ cp $NONROOTHOME/.readme/root-config/backlight.rules /etc/udev/rules.d/backlight.rules

# udev rule for dolphin-emu/fastermelee
$ cp $NONROOTHOME/.readme/root-config/51-gcadapter.rules /etc/udev/rules.d/51-gcadapter.rules

#----------------------------------------------------------------

# extra configuration

# set up following files

# [pkgaur]
$ mkdir ~/Packages
$ git clone https://github.com/jumper149/pkgaur.git ~/Packages/pkgaur

# [i3bar]
# check everything in $HOME/.config/i3blocks
# especially:
# 	wifi.sh
# 	space.sh
# 	temperature.sh
# 	fan.sh
# 	battery.sh

# [mpd]
$ systemctl enable mpd.service --user

# [trash]
# ~/.trash is being used by ranger
$ mkdir ~/.trash

# [pass]
# copy your .password-store into $HOME
# have an insertion 'test/test' with password 'test' inside or add it with
$ pass insert test/test
# copy everything necessary into $HOME/.gnupg

# [cronie]
# overwrite the empty crontab for your user
$ crontab ~/.readme/root-config/crontab

#----------------------------------------------------------------

# now you are set up :)
